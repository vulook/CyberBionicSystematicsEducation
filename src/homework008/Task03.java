package homework008;

/**
 * FileName: Task03
 * Author:   Andriy Vulook
 * Date:     20.02.2023 21:23
 * Description: Delivery
 *
 * Рекурсія є технікою програмування, при якій функція викликає саму себе. Кожного разу, коли виконується
 * рекурсивний виклик, виділяється простір стеку для зберігання локальних змінних. Через це програма
 * може спричинити проблему переповнення стека, якщо кількість рекурсивного виклику велика.
 * Для розрахунку 1000! за цією програмою буде використано 1000 стекових кадрів, коли ітераційне рішення
 * в основному використовує лише один кадр стека. Питання, яке розв’язане рекурсією, також може бути розв’язане
 * за допомогою циклу. Однак, ітеративний код зазвичай має більше рядків коду, ніж відповідна рекурсивна реалізація.
 * Рекурсія працює на рівні методу або функції, тоді як цикл застосовується на рівні інструкції. Коли ми обираємо
 * між рекурсією, або циклом, то повинні зважати на постановку проблеми, доступні обчислювальні ресурси та
 * обов’язкові критерії виводу.
 *
 */

public class Task03 {

    public static void main(String[] args) {
        int num = 14;
        long factorial = multiplyNumbers(num);
        System.out.println("Factorial of " + num + " = " + factorial);
    }
    public static long multiplyNumbers(int num) {
        if (num >= 1)
            return num * multiplyNumbers(num - 1);
        else
            return 1;
    }

}
